{"version":3,"sources":["/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/$_gendir lazy","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.component.css","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.component.html","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.component.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.module.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/auth/main.component.html","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/auth/main.component.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/configServices/config.service.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/dbConfig.component.html","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/dbConfig.component.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/menu.component.html","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/menu.component.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/environments/environment.ts","/Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'\nimport { HttpModule } from '@angular/http'\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './auth/main.component';\nimport { MenuComponent } from './menu.component';\nimport { DbConfigComponent } from './dbConfig.component';\nimport { ConfigService } from './configServices/config.service';\n\nconst appRoutes: Routes = [\n    { path: '', component: MainComponent },\n    {\n        path: 'menu', component: MenuComponent,\n        children: [\n            {\n                path: '',\n                component: DbConfigComponent\n            },\n            {\n                path: 'db',\n                component: DbConfigComponent\n            }\n        ]\n    }\n]\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        MainComponent,\n        MenuComponent,\n        DbConfigComponent\n    ],\n    imports: [\n        HttpModule,\n        BrowserModule,\n        FormsModule,\n        RouterModule.forRoot(\n            appRoutes,\n            { enableTracing: false } // <-- debugging purposes only\n        ),\n    ],\n    providers: [ ConfigService ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/app.module.ts","module.exports = \"<h1>Camaleon Desktop Application</h1>\\n\\n<a [routerLink]=\\\"[ 'menu/db' ]\\\">DB</a>\\n\\n<small>{{address}}</small>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/auth/main.component.html\n// module id = ../../../../../src/app/auth/main.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { ConfigService } from \"../configServices/config.service\";\n\n@Component({\n    templateUrl:\"./main.component.html\"\n})\nexport class MainComponent implements OnInit{\n\n    public address : String\n\n    constructor(private configService:ConfigService) {}\n\n    ngOnInit(){\n        this.getServerAddress()\n    }\n    \n    getServerAddress(){\n        this.configService.getServerIPAddress()\n            .subscribe(response =>{\n                let body = JSON.parse(response[\"_body\"])\n                this.address = body.data.address\n            })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/auth/main.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from \"rxjs/Observable\";\n\n@Injectable()\nexport class ConfigService {\n\n    constructor(private http_service:Http) {}\n\n    getDBConfig():Observable<Response>{\n        return this.http_service.get('/dbconfig')\n    }\n\n    updateDBConfig(data):Observable<Response> {\n        return this.http_service.put('/dbconfig', data)\n    }\n\n    getServerIPAddress():Observable<Response>{\n        return this.http_service.get( '/ipaddress' )\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/configServices/config.service.ts","module.exports = \"<h2>DB Config</h2>\\n\\n<form (ngSubmit)=\\\"updateConfiguration()\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"host\\\">Host</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"host\\\" placeholder=\\\"host\\\" required autofocus [(ngModel)]=\\\"config.host\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">User</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"username\\\" required autofocus [(ngModel)]=\\\"config.username\\\">                \\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"password\\\" required autofocus [(ngModel)]=\\\"config.password\\\">                \\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"db_name\\\">DB Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"db_name\\\" placeholder=\\\"db_name\\\" required autofocus [(ngModel)]=\\\"config.db_name\\\">                \\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\"  [routerLink]=\\\"['/']\\\">Cancel</button>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Submit</button>\\n        </div>\\n    </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/dbConfig.component.html\n// module id = ../../../../../src/app/dbConfig.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { ConfigService } from \"./configServices/config.service\";\n\n@Component({\n    templateUrl: \"./dbConfig.component.html\"\n})\nexport class DbConfigComponent implements OnInit{\n\n    public config = {host:\"\", username:\"\", password:\"\", db_name:\"\"}\n    \n    // constructor function\n    // @param service Config Service\n    constructor(public service:ConfigService) {}\n\n    // initializer function\n    ngOnInit() { this.getConfiguration() }\n\n    // getConfiguration\n    // retrieves the db configuration\n    // @params none\n    // @returns none\n    getConfiguration() {\n        this.service\n            .getDBConfig()\n            .subscribe(response => {\n                \n                let body = JSON.parse(response[\"_body\"])\n                \n                this.config.host = body.host\n                this.config.username = body.username\n                this.config.password = body.password\n                this.config.db_name = body.db_name\n\n            })\n    }\n\n    // updateConfiguration\n    // function update configuration\n    // @params none\n    // @returns none \n    updateConfiguration() {\n        this.service\n            .updateDBConfig(this.config)\n            .subscribe(response => {\n                let body = JSON.parse(response[\"_body\"])\n\n                console.log(body)\n            })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/dbConfig.component.ts","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/menu.component.html\n// module id = ../../../../../src/app/menu.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\n\n@Component({\n    templateUrl : \"./menu.component.html\"\n})\nexport class MenuComponent {}\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/app/menu.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/codethefuckout/Documents/Projects/camaleon-desktop-pos/src/main.ts"],"sourceRoot":"webpack:///"}